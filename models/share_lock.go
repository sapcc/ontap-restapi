// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ShareLock share lock
//
// swagger:model share_lock
type ShareLock struct {

	// Types of share lock modes.
	// Read Only: true
	// Enum: ["delete_on_close","read_deny_read","read_deny_write","read_deny_all","read_deny_delete","read_deny_none","read_deny_read_write","read_deny_read_delete","read_deny_write_delete","write_deny_read","write_deny_write","write_deny_all","write_deny_delete","write_deny_none","write_deny_read_write","write_deny_read_delete","write_deny_write_delete","delete_deny_read","delete_deny_write","delete_deny_all","delete_deny_delete","delete_deny_none","delete_deny_read_write","delete_deny_read_delete","delete_deny_write_delete","read_write_deny_read","read_write_deny_write","read_write_deny_all","read_write_deny_delete","read_write_deny_none","read_write_deny_read_write","read_write_deny_read_delete","read_write_deny_write_delete","read_delete_deny_read","read_delete_deny_write","read_delete_deny_all","read_delete_deny_delete","read_delete_deny_none","read_delete_deny_read_write","read_delete_deny_read_delete","read_delete_deny_write_delete","write_delete_deny_read","write_delete_deny_write","write_delete_deny_all","write_delete_deny_delete","write_delete_deny_none","write_delete_deny_read_write","write_delete_deny_read_delete","write_delete_deny_write_delete","all_deny_read","all_deny_write","all_deny_all","all_deny_delete","all_deny_none","all_deny_read_write","all_deny_read_delete","all_deny_write_delete","none_deny_read","none_deny_write","none_deny_all","none_deny_delete","none_deny_none","none_deny_read_write","none_deny_read_delete","none_deny_write_delete"]
	Mode *string `json:"mode,omitempty"`

	// Indicates whether it is a soft share lock.
	// Read Only: true
	Soft *bool `json:"soft,omitempty"`
}

// Validate validates this share lock
func (m *ShareLock) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var shareLockTypeModePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["delete_on_close","read_deny_read","read_deny_write","read_deny_all","read_deny_delete","read_deny_none","read_deny_read_write","read_deny_read_delete","read_deny_write_delete","write_deny_read","write_deny_write","write_deny_all","write_deny_delete","write_deny_none","write_deny_read_write","write_deny_read_delete","write_deny_write_delete","delete_deny_read","delete_deny_write","delete_deny_all","delete_deny_delete","delete_deny_none","delete_deny_read_write","delete_deny_read_delete","delete_deny_write_delete","read_write_deny_read","read_write_deny_write","read_write_deny_all","read_write_deny_delete","read_write_deny_none","read_write_deny_read_write","read_write_deny_read_delete","read_write_deny_write_delete","read_delete_deny_read","read_delete_deny_write","read_delete_deny_all","read_delete_deny_delete","read_delete_deny_none","read_delete_deny_read_write","read_delete_deny_read_delete","read_delete_deny_write_delete","write_delete_deny_read","write_delete_deny_write","write_delete_deny_all","write_delete_deny_delete","write_delete_deny_none","write_delete_deny_read_write","write_delete_deny_read_delete","write_delete_deny_write_delete","all_deny_read","all_deny_write","all_deny_all","all_deny_delete","all_deny_none","all_deny_read_write","all_deny_read_delete","all_deny_write_delete","none_deny_read","none_deny_write","none_deny_all","none_deny_delete","none_deny_none","none_deny_read_write","none_deny_read_delete","none_deny_write_delete"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		shareLockTypeModePropEnum = append(shareLockTypeModePropEnum, v)
	}
}

const (

	// ShareLockModeDeleteOnClose captures enum value "delete_on_close"
	ShareLockModeDeleteOnClose string = "delete_on_close"

	// ShareLockModeReadDenyRead captures enum value "read_deny_read"
	ShareLockModeReadDenyRead string = "read_deny_read"

	// ShareLockModeReadDenyWrite captures enum value "read_deny_write"
	ShareLockModeReadDenyWrite string = "read_deny_write"

	// ShareLockModeReadDenyAll captures enum value "read_deny_all"
	ShareLockModeReadDenyAll string = "read_deny_all"

	// ShareLockModeReadDenyDelete captures enum value "read_deny_delete"
	ShareLockModeReadDenyDelete string = "read_deny_delete"

	// ShareLockModeReadDenyNone captures enum value "read_deny_none"
	ShareLockModeReadDenyNone string = "read_deny_none"

	// ShareLockModeReadDenyReadWrite captures enum value "read_deny_read_write"
	ShareLockModeReadDenyReadWrite string = "read_deny_read_write"

	// ShareLockModeReadDenyReadDelete captures enum value "read_deny_read_delete"
	ShareLockModeReadDenyReadDelete string = "read_deny_read_delete"

	// ShareLockModeReadDenyWriteDelete captures enum value "read_deny_write_delete"
	ShareLockModeReadDenyWriteDelete string = "read_deny_write_delete"

	// ShareLockModeWriteDenyRead captures enum value "write_deny_read"
	ShareLockModeWriteDenyRead string = "write_deny_read"

	// ShareLockModeWriteDenyWrite captures enum value "write_deny_write"
	ShareLockModeWriteDenyWrite string = "write_deny_write"

	// ShareLockModeWriteDenyAll captures enum value "write_deny_all"
	ShareLockModeWriteDenyAll string = "write_deny_all"

	// ShareLockModeWriteDenyDelete captures enum value "write_deny_delete"
	ShareLockModeWriteDenyDelete string = "write_deny_delete"

	// ShareLockModeWriteDenyNone captures enum value "write_deny_none"
	ShareLockModeWriteDenyNone string = "write_deny_none"

	// ShareLockModeWriteDenyReadWrite captures enum value "write_deny_read_write"
	ShareLockModeWriteDenyReadWrite string = "write_deny_read_write"

	// ShareLockModeWriteDenyReadDelete captures enum value "write_deny_read_delete"
	ShareLockModeWriteDenyReadDelete string = "write_deny_read_delete"

	// ShareLockModeWriteDenyWriteDelete captures enum value "write_deny_write_delete"
	ShareLockModeWriteDenyWriteDelete string = "write_deny_write_delete"

	// ShareLockModeDeleteDenyRead captures enum value "delete_deny_read"
	ShareLockModeDeleteDenyRead string = "delete_deny_read"

	// ShareLockModeDeleteDenyWrite captures enum value "delete_deny_write"
	ShareLockModeDeleteDenyWrite string = "delete_deny_write"

	// ShareLockModeDeleteDenyAll captures enum value "delete_deny_all"
	ShareLockModeDeleteDenyAll string = "delete_deny_all"

	// ShareLockModeDeleteDenyDelete captures enum value "delete_deny_delete"
	ShareLockModeDeleteDenyDelete string = "delete_deny_delete"

	// ShareLockModeDeleteDenyNone captures enum value "delete_deny_none"
	ShareLockModeDeleteDenyNone string = "delete_deny_none"

	// ShareLockModeDeleteDenyReadWrite captures enum value "delete_deny_read_write"
	ShareLockModeDeleteDenyReadWrite string = "delete_deny_read_write"

	// ShareLockModeDeleteDenyReadDelete captures enum value "delete_deny_read_delete"
	ShareLockModeDeleteDenyReadDelete string = "delete_deny_read_delete"

	// ShareLockModeDeleteDenyWriteDelete captures enum value "delete_deny_write_delete"
	ShareLockModeDeleteDenyWriteDelete string = "delete_deny_write_delete"

	// ShareLockModeReadWriteDenyRead captures enum value "read_write_deny_read"
	ShareLockModeReadWriteDenyRead string = "read_write_deny_read"

	// ShareLockModeReadWriteDenyWrite captures enum value "read_write_deny_write"
	ShareLockModeReadWriteDenyWrite string = "read_write_deny_write"

	// ShareLockModeReadWriteDenyAll captures enum value "read_write_deny_all"
	ShareLockModeReadWriteDenyAll string = "read_write_deny_all"

	// ShareLockModeReadWriteDenyDelete captures enum value "read_write_deny_delete"
	ShareLockModeReadWriteDenyDelete string = "read_write_deny_delete"

	// ShareLockModeReadWriteDenyNone captures enum value "read_write_deny_none"
	ShareLockModeReadWriteDenyNone string = "read_write_deny_none"

	// ShareLockModeReadWriteDenyReadWrite captures enum value "read_write_deny_read_write"
	ShareLockModeReadWriteDenyReadWrite string = "read_write_deny_read_write"

	// ShareLockModeReadWriteDenyReadDelete captures enum value "read_write_deny_read_delete"
	ShareLockModeReadWriteDenyReadDelete string = "read_write_deny_read_delete"

	// ShareLockModeReadWriteDenyWriteDelete captures enum value "read_write_deny_write_delete"
	ShareLockModeReadWriteDenyWriteDelete string = "read_write_deny_write_delete"

	// ShareLockModeReadDeleteDenyRead captures enum value "read_delete_deny_read"
	ShareLockModeReadDeleteDenyRead string = "read_delete_deny_read"

	// ShareLockModeReadDeleteDenyWrite captures enum value "read_delete_deny_write"
	ShareLockModeReadDeleteDenyWrite string = "read_delete_deny_write"

	// ShareLockModeReadDeleteDenyAll captures enum value "read_delete_deny_all"
	ShareLockModeReadDeleteDenyAll string = "read_delete_deny_all"

	// ShareLockModeReadDeleteDenyDelete captures enum value "read_delete_deny_delete"
	ShareLockModeReadDeleteDenyDelete string = "read_delete_deny_delete"

	// ShareLockModeReadDeleteDenyNone captures enum value "read_delete_deny_none"
	ShareLockModeReadDeleteDenyNone string = "read_delete_deny_none"

	// ShareLockModeReadDeleteDenyReadWrite captures enum value "read_delete_deny_read_write"
	ShareLockModeReadDeleteDenyReadWrite string = "read_delete_deny_read_write"

	// ShareLockModeReadDeleteDenyReadDelete captures enum value "read_delete_deny_read_delete"
	ShareLockModeReadDeleteDenyReadDelete string = "read_delete_deny_read_delete"

	// ShareLockModeReadDeleteDenyWriteDelete captures enum value "read_delete_deny_write_delete"
	ShareLockModeReadDeleteDenyWriteDelete string = "read_delete_deny_write_delete"

	// ShareLockModeWriteDeleteDenyRead captures enum value "write_delete_deny_read"
	ShareLockModeWriteDeleteDenyRead string = "write_delete_deny_read"

	// ShareLockModeWriteDeleteDenyWrite captures enum value "write_delete_deny_write"
	ShareLockModeWriteDeleteDenyWrite string = "write_delete_deny_write"

	// ShareLockModeWriteDeleteDenyAll captures enum value "write_delete_deny_all"
	ShareLockModeWriteDeleteDenyAll string = "write_delete_deny_all"

	// ShareLockModeWriteDeleteDenyDelete captures enum value "write_delete_deny_delete"
	ShareLockModeWriteDeleteDenyDelete string = "write_delete_deny_delete"

	// ShareLockModeWriteDeleteDenyNone captures enum value "write_delete_deny_none"
	ShareLockModeWriteDeleteDenyNone string = "write_delete_deny_none"

	// ShareLockModeWriteDeleteDenyReadWrite captures enum value "write_delete_deny_read_write"
	ShareLockModeWriteDeleteDenyReadWrite string = "write_delete_deny_read_write"

	// ShareLockModeWriteDeleteDenyReadDelete captures enum value "write_delete_deny_read_delete"
	ShareLockModeWriteDeleteDenyReadDelete string = "write_delete_deny_read_delete"

	// ShareLockModeWriteDeleteDenyWriteDelete captures enum value "write_delete_deny_write_delete"
	ShareLockModeWriteDeleteDenyWriteDelete string = "write_delete_deny_write_delete"

	// ShareLockModeAllDenyRead captures enum value "all_deny_read"
	ShareLockModeAllDenyRead string = "all_deny_read"

	// ShareLockModeAllDenyWrite captures enum value "all_deny_write"
	ShareLockModeAllDenyWrite string = "all_deny_write"

	// ShareLockModeAllDenyAll captures enum value "all_deny_all"
	ShareLockModeAllDenyAll string = "all_deny_all"

	// ShareLockModeAllDenyDelete captures enum value "all_deny_delete"
	ShareLockModeAllDenyDelete string = "all_deny_delete"

	// ShareLockModeAllDenyNone captures enum value "all_deny_none"
	ShareLockModeAllDenyNone string = "all_deny_none"

	// ShareLockModeAllDenyReadWrite captures enum value "all_deny_read_write"
	ShareLockModeAllDenyReadWrite string = "all_deny_read_write"

	// ShareLockModeAllDenyReadDelete captures enum value "all_deny_read_delete"
	ShareLockModeAllDenyReadDelete string = "all_deny_read_delete"

	// ShareLockModeAllDenyWriteDelete captures enum value "all_deny_write_delete"
	ShareLockModeAllDenyWriteDelete string = "all_deny_write_delete"

	// ShareLockModeNoneDenyRead captures enum value "none_deny_read"
	ShareLockModeNoneDenyRead string = "none_deny_read"

	// ShareLockModeNoneDenyWrite captures enum value "none_deny_write"
	ShareLockModeNoneDenyWrite string = "none_deny_write"

	// ShareLockModeNoneDenyAll captures enum value "none_deny_all"
	ShareLockModeNoneDenyAll string = "none_deny_all"

	// ShareLockModeNoneDenyDelete captures enum value "none_deny_delete"
	ShareLockModeNoneDenyDelete string = "none_deny_delete"

	// ShareLockModeNoneDenyNone captures enum value "none_deny_none"
	ShareLockModeNoneDenyNone string = "none_deny_none"

	// ShareLockModeNoneDenyReadWrite captures enum value "none_deny_read_write"
	ShareLockModeNoneDenyReadWrite string = "none_deny_read_write"

	// ShareLockModeNoneDenyReadDelete captures enum value "none_deny_read_delete"
	ShareLockModeNoneDenyReadDelete string = "none_deny_read_delete"

	// ShareLockModeNoneDenyWriteDelete captures enum value "none_deny_write_delete"
	ShareLockModeNoneDenyWriteDelete string = "none_deny_write_delete"
)

// prop value enum
func (m *ShareLock) validateModeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, shareLockTypeModePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ShareLock) validateMode(formats strfmt.Registry) error {
	if swag.IsZero(m.Mode) { // not required
		return nil
	}

	// value enum
	if err := m.validateModeEnum("mode", "body", *m.Mode); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this share lock based on the context it is used
func (m *ShareLock) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateMode(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateSoft(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ShareLock) contextValidateMode(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "mode", "body", m.Mode); err != nil {
		return err
	}

	return nil
}

func (m *ShareLock) contextValidateSoft(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "soft", "body", m.Soft); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ShareLock) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ShareLock) UnmarshalBinary(b []byte) error {
	var res ShareLock
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
