// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FlexcacheAtimeScrub flexcache atime scrub
//
// swagger:model flexcache_atime_scrub
type FlexcacheAtimeScrub struct {

	// Specifies whether scrubbing of inactive files based on atime is enabled for the FlexCache volume. When scrubbing is enabled, files whose atime is older than the specified duration are evicted from the cache volume. The scrubber runs once a day and looks for files whose atime has exceeded the provisioned value.
	Enabled *bool `json:"enabled,omitempty"`

	// Specifies the atime duration in days after which a cached file is considered inactive. Inactive files are purged from the FlexCache volumes when the scrubber runs once a day.
	Period *int16 `json:"period,omitempty"`
}

// Validate validates this flexcache atime scrub
func (m *FlexcacheAtimeScrub) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this flexcache atime scrub based on context it is used
func (m *FlexcacheAtimeScrub) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FlexcacheAtimeScrub) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FlexcacheAtimeScrub) UnmarshalBinary(b []byte) error {
	var res FlexcacheAtimeScrub
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
