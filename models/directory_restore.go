// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DirectoryRestore Restores a directory from a volume snapshot.
//
// swagger:model directory_restore
type DirectoryRestore struct {

	// Source from where the directory is restored.
	// Example: src_file1 or dir1/src_file2 or ./.snapshot/snap1/src_file3
	Path *string `json:"path,omitempty"`

	// Destination directory where the new directory tree is created.
	// Example: dest_file1 or dir1/dest_file2
	RestorePath *string `json:"restore_path,omitempty"`

	// Name of the volume snapshot from which the directory is restored.
	Snapshot *string `json:"snapshot,omitempty"`

	// Name of the volume from which the snapshot is used for directory restore.
	Volume *string `json:"volume,omitempty"`

	// Name of the SVM.
	Vserver *string `json:"vserver,omitempty"`
}

// Validate validates this directory restore
func (m *DirectoryRestore) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this directory restore based on context it is used
func (m *DirectoryRestore) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DirectoryRestore) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DirectoryRestore) UnmarshalBinary(b []byte) error {
	var res DirectoryRestore
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
