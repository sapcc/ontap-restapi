// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// FlexcacheRelativeSize flexcache relative size
//
// swagger:model flexcache_relative_size
type FlexcacheRelativeSize struct {

	// Specifies whether the relative sizing is enabled for the FlexCache volume. Relative sizing is introduced as a part of follow the origin feature. When relative sizing is enabled, it blocks any modifications done manually in the absolute size of the FlexCache volume. The size of the FlexCache volume is calculated and entered automatically based on the size of the origin volume.
	Enabled *bool `json:"enabled,omitempty"`

	// Specifies the percent size the FlexCache volume should have relative to the total size of the origin volume. This property is only relevant to a FlexCache volume that has the relative size property enabled.
	Percentage *int16 `json:"percentage,omitempty"`
}

// Validate validates this flexcache relative size
func (m *FlexcacheRelativeSize) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this flexcache relative size based on context it is used
func (m *FlexcacheRelativeSize) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *FlexcacheRelativeSize) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *FlexcacheRelativeSize) UnmarshalBinary(b []byte) error {
	var res FlexcacheRelativeSize
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
