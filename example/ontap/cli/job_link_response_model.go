// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/swag"
	"github.com/sapcc/ontap-restapi/example/ontap/models"
	"github.com/spf13/cobra"
)

// Schema cli for JobLinkResponse

// register flags to command
func registerModelJobLinkResponseFlags(depth int, cmdPrefix string, cmd *cobra.Command) error {

	if err := registerJobLinkResponsePropJob(depth, cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerJobLinkResponsePropJob(depth int, cmdPrefix string, cmd *cobra.Command) error {
	if depth > maxDepth {
		return nil
	}

	var flagJobName string
	if cmdPrefix == "" {
		flagJobName = "job"
	} else {
		flagJobName = fmt.Sprintf("%v.job", cmdPrefix)
	}

	if err := registerModelJobLinkFlags(depth+1, flagJobName, cmd); err != nil {
		return err
	}

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelJobLinkResponseFlags(depth int, m *models.JobLinkResponse, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, JobAdded := retrieveJobLinkResponsePropJobFlags(depth, m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || JobAdded

	return nil, retAdded
}

func retrieveJobLinkResponsePropJobFlags(depth int, m *models.JobLinkResponse, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	if depth > maxDepth {
		return nil, false
	}
	retAdded := false

	flagJobName := fmt.Sprintf("%v.job", cmdPrefix)
	if cmd.Flags().Changed(flagJobName) {
		// info: complex object job JobLink is retrieved outside this Changed() block
	}
	flagJobValue := m.Job
	if swag.IsZero(flagJobValue) {
		flagJobValue = &models.JobLink{}
	}

	err, JobAdded := retrieveModelJobLinkFlags(depth+1, flagJobValue, flagJobName, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || JobAdded
	if JobAdded {
		m.Job = flagJobValue
	}

	return nil, retAdded
}
