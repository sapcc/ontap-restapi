// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// IPV4InterfaceAndGateway Object to set up an interface along with its default router.
//
// swagger:model ipv4_interface_and_gateway
type IPV4InterfaceAndGateway struct {

	// IPv4 address
	// Example: 10.10.10.7
	Address *string `json:"address,omitempty"`

	// The IPv4 address of the default router.
	// Example: 10.1.1.1
	Gateway *string `json:"gateway,omitempty"`

	// Input as IPv4 mask (255.255.0.0). Output is always the netmask length.
	// Example: 255.255.0.0
	Netmask *string `json:"netmask,omitempty"`
}

// Validate validates this ipv4 interface and gateway
func (m *IPV4InterfaceAndGateway) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this ipv4 interface and gateway based on context it is used
func (m *IPV4InterfaceAndGateway) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IPV4InterfaceAndGateway) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IPV4InterfaceAndGateway) UnmarshalBinary(b []byte) error {
	var res IPV4InterfaceAndGateway
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
