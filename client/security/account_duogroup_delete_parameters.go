// Code generated by go-swagger; DO NOT EDIT.

package security

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewAccountDuogroupDeleteParams creates a new AccountDuogroupDeleteParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAccountDuogroupDeleteParams() *AccountDuogroupDeleteParams {
	return &AccountDuogroupDeleteParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAccountDuogroupDeleteParamsWithTimeout creates a new AccountDuogroupDeleteParams object
// with the ability to set a timeout on a request.
func NewAccountDuogroupDeleteParamsWithTimeout(timeout time.Duration) *AccountDuogroupDeleteParams {
	return &AccountDuogroupDeleteParams{
		timeout: timeout,
	}
}

// NewAccountDuogroupDeleteParamsWithContext creates a new AccountDuogroupDeleteParams object
// with the ability to set a context for a request.
func NewAccountDuogroupDeleteParamsWithContext(ctx context.Context) *AccountDuogroupDeleteParams {
	return &AccountDuogroupDeleteParams{
		Context: ctx,
	}
}

// NewAccountDuogroupDeleteParamsWithHTTPClient creates a new AccountDuogroupDeleteParams object
// with the ability to set a custom HTTPClient for a request.
func NewAccountDuogroupDeleteParamsWithHTTPClient(client *http.Client) *AccountDuogroupDeleteParams {
	return &AccountDuogroupDeleteParams{
		HTTPClient: client,
	}
}

/*
AccountDuogroupDeleteParams contains all the parameters to send to the API endpoint

	for the account duogroup delete operation.

	Typically these are written to a http.Request.
*/
type AccountDuogroupDeleteParams struct {

	/* Name.

	   Group name.
	*/
	Name string

	/* OwnerUUID.

	   Account owner UUID.
	*/
	OwnerUUID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the account duogroup delete params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AccountDuogroupDeleteParams) WithDefaults() *AccountDuogroupDeleteParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the account duogroup delete params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AccountDuogroupDeleteParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the account duogroup delete params
func (o *AccountDuogroupDeleteParams) WithTimeout(timeout time.Duration) *AccountDuogroupDeleteParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the account duogroup delete params
func (o *AccountDuogroupDeleteParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the account duogroup delete params
func (o *AccountDuogroupDeleteParams) WithContext(ctx context.Context) *AccountDuogroupDeleteParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the account duogroup delete params
func (o *AccountDuogroupDeleteParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the account duogroup delete params
func (o *AccountDuogroupDeleteParams) WithHTTPClient(client *http.Client) *AccountDuogroupDeleteParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the account duogroup delete params
func (o *AccountDuogroupDeleteParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the name to the account duogroup delete params
func (o *AccountDuogroupDeleteParams) WithName(name string) *AccountDuogroupDeleteParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the account duogroup delete params
func (o *AccountDuogroupDeleteParams) SetName(name string) {
	o.Name = name
}

// WithOwnerUUID adds the ownerUUID to the account duogroup delete params
func (o *AccountDuogroupDeleteParams) WithOwnerUUID(ownerUUID string) *AccountDuogroupDeleteParams {
	o.SetOwnerUUID(ownerUUID)
	return o
}

// SetOwnerUUID adds the ownerUuid to the account duogroup delete params
func (o *AccountDuogroupDeleteParams) SetOwnerUUID(ownerUUID string) {
	o.OwnerUUID = ownerUUID
}

// WriteToRequest writes these params to a swagger request
func (o *AccountDuogroupDeleteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	// path param owner.uuid
	if err := r.SetPathParam("owner.uuid", o.OwnerUUID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
